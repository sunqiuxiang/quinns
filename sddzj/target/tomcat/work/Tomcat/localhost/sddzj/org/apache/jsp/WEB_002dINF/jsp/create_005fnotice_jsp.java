/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-12-25 02:18:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class create_005fnotice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title></title>\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n");
      out.write("  <script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/css/lib/jquery/1.9.1/jquery.min.js\"></script> \n");
      out.write("\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.print(request.getContextPath() );
      out.write("/css/lib/utf8-jsp/ueditor.config.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.print(request.getContextPath() );
      out.write("/css/lib/utf8-jsp/ueditor.all.min.js\"> </script>\n");
      out.write("    <!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->\n");
      out.write("    <!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.print(request.getContextPath() );
      out.write("/css/lib/utf8-jsp/lang/zh-cn/zh-cn.js\"></script>\n");
      out.write("\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("        div{\n");
      out.write("            width:100%;\n");
      out.write("        }\n");
      out.write("        a.btn{\n");
      out.write("        \twidth:100px;\n");
      out.write("        \theight:40px;\n");
      out.write("        \tdisplay: block;\n");
      out.write("        \tborder-radius:3px;\n");
      out.write("        \ttext-align: center;\n");
      out.write("        \tline-height:40px;\n");
      out.write("        \tbackground: skyblue;\n");
      out.write("        \tmargin:20px auto;\n");
      out.write("        \tcolor:#fff;\n");
      out.write("        \tfont-family: \"微软雅黑\";\n");
      out.write("        \tcursor: pointer;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<center style=\"margin:25px 0;font-family:'微软雅黑'\">标题：<input id=\"title\" type=\"text\" style=\"width:300px;height:25px;\"/></center>\n");
      out.write("\t<script type=\"text/plain\" id=\"editor\" style=\"width:100% ;height:300px;\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/css/lib/layer/2.1/layer.js\"></script>\n");
      out.write("\t<a onclick=\"verify()\" class=\"btn\">发布公告</a>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\tfunction verify(){\n");
      out.write("\t\tif(verifyy()){\n");
      out.write("\t\t\tgetContent()\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\tfunction verifyy(){\n");
      out.write("\t\tvar title = document.getElementById(\"title\").value;\n");
      out.write("\t\tif (title = null || title == \"\") {\n");
      out.write("\t\t\talert(\" 公告题目不能为空\");\n");
      out.write("\t\t\treturn false;}\n");
      out.write("\t\telse{\n");
      out.write("\t\t\treturn true;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\tvar ue = UE.getEditor('editor',{\n");
      out.write("\t\ttoolbars:[\n");
      out.write("\t\t\t[\n");
      out.write("\t\t\t\t'anchor', //锚点\n");
      out.write("\t\t\t\t'undo', //撤销\n");
      out.write("\t\t\t\t'redo', //重做\n");
      out.write("\t\t\t\t'bold', //加粗\n");
      out.write("\t\t\t\t'indent', //首行缩进\n");
      out.write("\t\t\t\t'italic', //斜体\n");
      out.write("\t\t\t\t'underline', //下划线\n");
      out.write("\t\t\t\t'strikethrough', //删除线\n");
      out.write("\t\t\t\t'subscript', //下标\n");
      out.write("\t\t\t\t'fontborder', //字符边框\n");
      out.write("\t\t\t\t'superscript', //上标\n");
      out.write("\t\t\t\t'formatmatch', //格式刷\n");
      out.write("\t\t\t\t'blockquote', //引用\n");
      out.write("\t\t\t\t'pasteplain', //纯文本粘贴模式\n");
      out.write("\t\t\t\t'selectall', //全选\n");
      out.write("\t\t\t\t'print', //打印\n");
      out.write("\t\t\t\t'preview', //预览\n");
      out.write("\t\t\t\t'horizontal', //分隔线\n");
      out.write("\t\t\t\t'removeformat', //清除格式\n");
      out.write("\t\t\t\t'time', //时间\n");
      out.write("\t\t\t\t'date', //日期\n");
      out.write("\t\t\t\t'unlink', //取消链接\n");
      out.write("\t\t\t\t'insertrow', //前插入行\n");
      out.write("\t\t\t\t'insertcol', //前插入列\n");
      out.write("\t\t\t\t'mergeright', //右合并单元格\n");
      out.write("\t\t\t\t'mergedown', //下合并单元格\n");
      out.write("\t\t\t\t'deleterow', //删除行\n");
      out.write("\t\t\t\t'deletecol', //删除列\n");
      out.write("\t\t\t\t'splittorows', //拆分成行\n");
      out.write("\t\t\t\t'splittocols', //拆分成列\n");
      out.write("\t\t\t\t'splittocells', //完全拆分单元格\n");
      out.write("\t\t\t\t'deletecaption', //删除表格标题\n");
      out.write("\t\t\t\t'inserttitle', //插入标题\n");
      out.write("\t\t\t\t'mergecells', //合并多个单元格\n");
      out.write("\t\t\t\t'deletetable', //删除表格\n");
      out.write("\t\t\t\t'cleardoc', //清空文档\n");
      out.write("\t\t\t\t'insertparagraphbeforetable', //\"表格前插入行\"\n");
      out.write("\t\t\t\t'insertcode', //代码语言\n");
      out.write("\t\t\t\t'fontfamily', //字体\n");
      out.write("\t\t\t\t'fontsize', //字号\n");
      out.write("\t\t\t\t'paragraph', //段落格式\n");
      out.write("\t\t\t\t'edittable', //表格属性\n");
      out.write("\t\t\t\t'edittd', //单元格属性\n");
      out.write("\t\t\t\t'link', //超链接\n");
      out.write("\t\t\t\t'spechars', //特殊字符\n");
      out.write("\t\t\t\t'searchreplace', //查询替换\n");
      out.write("\t\t\t\t'help', //帮助\n");
      out.write("\t\t\t\t'justifyleft', //居左对齐\n");
      out.write("\t\t\t\t'justifyright', //居右对齐\n");
      out.write("\t\t\t\t'justifycenter', //居中对齐\n");
      out.write("\t\t\t\t'justifyjustify', //两端对齐\n");
      out.write("\t\t\t\t'forecolor', //字体颜色\n");
      out.write("\t\t\t\t'backcolor', //背景色\n");
      out.write("\t\t\t\t'insertorderedlist', //有序列表\n");
      out.write("\t\t\t\t'insertunorderedlist', //无序列表\n");
      out.write("\t\t\t\t'fullscreen', //全屏\n");
      out.write("\t\t\t\t'directionalityltr', //从左向右输入\n");
      out.write("\t\t\t\t'directionalityrtl', //从右向左输入\n");
      out.write("\t\t\t\t'rowspacingtop', //段前距\n");
      out.write("\t\t\t\t'rowspacingbottom', //段后距\n");
      out.write("\t\t\t\t'pagebreak', //分页\n");
      out.write("\t\t\t\t'insertframe', //插入Iframe\n");
      out.write("\t\t\t\t'imagenone', //默认\n");
      out.write("\t\t\t\t'imageleft', //左浮动\n");
      out.write("\t\t\t\t'imageright', //右浮动\n");
      out.write("\t\t\t\t'imagecenter', //居中\n");
      out.write("\t\t\t\t'lineheight', //行间距\n");
      out.write("\t\t\t\t'edittip ', //编辑提示\n");
      out.write("\t\t\t\t'customstyle', //自定义标题\n");
      out.write("\t\t\t\t'autotypeset', //自动排版\n");
      out.write("\t\t\t\t'touppercase', //字母大写\n");
      out.write("\t\t\t\t'tolowercase', //字母小写\n");
      out.write("\t\t\t\t'template', //模板\n");
      out.write("\t\t\t\t'inserttable', //插入表格\n");
      out.write("\t\t\t\t'drafts', // 从草稿箱加载\n");
      out.write("\t\t\t\t'charts', // 图表\n");
      out.write("\t\t\t\t'attachment', //附件\n");
      out.write("\t\t\t ],\n");
      out.write("\t\t],\n");
      out.write("\t});\n");
      out.write("\tfunction getContent() {\n");
      out.write("\t\tvar data = {\n");
      out.write("\t\t\t\"notice_title\":$(\"#title\").val(),\n");
      out.write("\t\t\t\"notice_content\":UE.getEditor('editor').getContent()\n");
      out.write("\t\t};\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\ttype:'post',\n");
      out.write("\t\t\turl:'");
      out.print(request.getContextPath());
      out.write("/notice/create_notice',\n");
      out.write("\t\t\tdata:data,\n");
      out.write("\t\t\tsuccess:function(resultData){\n");
      out.write("\t\t\t\talert(resultData.res == 'suc');\n");
      out.write("\t\t\t\tif (resultData.res == 'suc') {\n");
      out.write("\t\t\t\t\t$(\"#title\").val(\"\");\n");
      out.write("\t\t\t\t\tue.execCommand('cleardoc');\n");
      out.write("\t\t\t\t\tlayer.msg(\"公告添加成功\",{icon:1,time:1000});\n");
      out.write("\t\t\t\t\tparent.location.reload();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\telse {\n");
      out.write("\t\t\t\t\tlayer.msg(\"公告添加失败\",{icon:1,time:1000});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("    }\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
